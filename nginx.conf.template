
#user  nobody;
worker_processes  auto;
worker_rlimit_nofile 100000;
daemon off;
error_log stderr info;


#pid        logs/nginx.pid;


events {
    worker_connections  90000;
    multi_accept on;
}


http {
    	
    access_log /dev/stdout;

    push_stream_message_ttl 1h;
    push_stream_shared_memory_size 700M;
    # push_stream_max_subscribers_per_channel 30000;
    # Prevent closing channels too fast
    push_stream_channel_inactivity_time 1h;

    push_stream_max_messages_stored_per_channel 1;
    # define publisher and subscriber endpoints in your server context
    server { 
        listen 80 backlog=1024 reuseport;      
        location / {
            return 204;
        }

        location /channels-stats {
            # activate channels statistics mode for this location
            push_stream_channels_statistics;

            # query string based channel id
            push_stream_channels_path               $arg_id;
        }


        location /pub {
            # authenticate request
            auth_request /auth;

            # activate publisher (admin) mode for this location
            push_stream_publisher admin;
            push_stream_store_messages on;

            # query string based channel id
            push_stream_channels_path               $arg_id;

            # cors headers
            push_stream_allowed_origins *;
        }

        location ~ /sub/(.*) {
            keepalive_requests 10000;
            # activate event source mode for this location
            push_stream_subscriber eventsource;
            add_header Content-Type "text/event-stream" always;
            add_header Access-Control-Allow-Origin *;
            # positional channel path
            push_stream_channels_path                   $1;
            # message template
            push_stream_message_template                ~text~;
            push_stream_authorized_channels_only on;
            # ping frequency
            # push_stream_ping_message_interval           2s;
        }

        location /auth {
            if ($http_authorization = "${PUBSUB_SECRET}") {
                return 200;
            }
            return 401;
        }

    }
}
